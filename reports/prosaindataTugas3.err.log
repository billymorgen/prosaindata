Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pyodbc
import pandas as pd
import psycopg2
import mysql.connector
import numpy as np

connpg = psycopg2.connect(
    database="prosain200411100057",
    user="postgres",
    password="123",
    host="0.tcp.ap.ngrok.io",
    port="19368"
)

curpg = connpg.cursor()

curpg.execute("SELECT sepallegth_057 FROM public.B057_irisdata ORDER BY id")

sl = curpg.fetchall()

sl=pd.DataFrame(sl,columns=['SepalLength'])

# print(sl)

connelp = psycopg2.connect(
    database="uxdvztyn",
    user="uxdvztyn",
    password="9sw2SFybuVuHo8p1TSeAsPdxZN_aEaxL",
    host="floppy.db.elephantsql.com",
    port="5432"
)

curelp = connelp.cursor()

curelp.execute("SELECT sepalwidth_057 FROM b057_irisdata ORDER BY id")

sw = curelp.fetchall()

sw=pd.DataFrame(sw,columns=['SepalWidth'])

# print(sw)

connmy = mysql.connector.connect(
    host="0.tcp.ap.ngrok.io",
    port="17360",
    user="root",
    password="",
    database="prosain2004111000057"
)

mycursor = connmy.cursor()

mycursor.execute("SELECT PetalLength_057 FROM 057_irisdata ORDER BY id;")

myresult = mycursor.fetchall()

pl = pd.DataFrame(myresult, columns=['PetalLength',])
# print(pl)

# 

cnxn = pyodbc.connect(r'Driver=ODBC Driver 17 for SQL Server;Server=DESKTOP-6A3115C;Database=sainsdata_057;Trusted_Connection=yes;')  
cursor = cnxn.cursor()


querypw = "SELECT PetalWidth FROM iris ORDER BY id"
querycl = "SELECT Class FROM iris ORDER BY id"

cursor.execute(querypw)
pw = cursor.fetchall()
cursor.execute(querycl)
cl = cursor.fetchall()

np_pw = np.array(pw)
np_cl = np.array(cl)

np_pwcls = np.concatenate((np_pw, cl), axis=1)

pwcls = pd.DataFrame(np_pwcls, columns=['PetalWidth', 'Class'])
pwcls.to_csv("pwcls.csv")
df_iris=pd.concat([sl,sw,pl,pwcls],axis=1)

print(df_iris.isna().sum())
------------------


[0;31m[0m
[0;31mModuleNotFoundError[0mTraceback (most recent call last)
[0;32m<ipython-input-1-b2ad77023943>[0m in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0;31m [0;32mimport[0m [0mpyodbc[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;32mimport[0m [0mpandas[0m [0;32mas[0m [0mpd[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;32mimport[0m [0mpsycopg2[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mimport[0m [0mmysql[0m[0;34m.[0m[0mconnector[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'pyodbc'

[0;31m---------------------------------------------------------------------------[0;32m
NOTE: If your import is failing due to a missing package, you can
manually install dependencies using either !pip or !apt.

To view examples of installing some common dependencies, click the
"Open Examples" button below.
[0;31m---------------------------------------------------------------------------[0m


